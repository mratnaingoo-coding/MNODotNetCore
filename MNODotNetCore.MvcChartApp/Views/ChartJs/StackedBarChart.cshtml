@model ChartJsModel;
<div>
    <canvas id="stackedBarChart"></canvas>
</div>
@section scripts {
    <script>
        const DATA_COUNT = 9;
        const NUMBER_CFG = { count: DATA_COUNT, min: -100, max: 100 };
        const _MONTHS = @Html.Raw(JsonConvert.SerializeObject(Model.Month));;
        function valueOrDefault(value, defaultValue) {
            return typeof value === 'undefined' ? defaultValue : value;
        }
        var _seed = Date.now();

        function srand(seed) {
            _seed = seed;
        }

        function rand(min, max) {
            min = valueOrDefault(min, 0);
            max = valueOrDefault(max, 0);
            _seed = (_seed * 9301 + 49297) % 233280;
            return min + (_seed / 233280) * (max - min);
        }
        function numbers(config) {
            var cfg = config || {};
            var min = valueOrDefault(cfg.min, 0);
            var max = valueOrDefault(cfg.max, 100);
            var from = valueOrDefault(cfg.from, []);
            var count = valueOrDefault(cfg.count, 8);
            var decimals = valueOrDefault(cfg.decimals, 8);
            var continuity = valueOrDefault(cfg.continuity, 1);
            var dfactor = Math.pow(10, decimals) || 0;
            var data = [];
            var i, value;

            for (i = 0; i < count; ++i) {
                value = (from[i] || 0) + this.rand(min, max);
                if (this.rand() <= continuity) {
                    data.push(Math.round(dfactor * value) / dfactor);
                } else {
                    data.push(null);
                }
            }

            return data;
        }

        function months(config) {
            var cfg = config || {};
            var count = cfg.count || 12;
            var section = cfg.section;
            var values = [];
            var i, value;

            for (i = 0; i < count; ++i) {
                value = _MONTHS[Math.ceil(i) % 12];
                values.push(value.substring(0, section));
            }

            return values;
        }
        const labels = months({ count: 9 });
        const data = {
            labels: labels,
            datasets: [
                {
                    label: 'Dataset 1',
                    data: numbers(NUMBER_CFG),
                    backgroundColor: 'rgb(255, 99, 132)',
                },
                {
                    label: 'Dataset 2',
                    data: numbers(NUMBER_CFG),
                    backgroundColor: 'rgb(54, 162, 235)',
                },
                {
                    label: 'Dataset 3',
                    data: numbers(NUMBER_CFG),
                    backgroundColor: 'rgb(75, 192, 192)',
                },
            ]
        };

        const config = {
            type: 'bar',
            data: data,
            options: {
                plugins: {
                    title: {
                        display: true,
                        text: 'Chart.js Bar Chart - Stacked'
                    },
                },
                responsive: true,
                scales: {
                    x: {
                        stacked: true,
                    },
                    y: {
                        stacked: true
                    }
                }
            }
        };

        const ctx = document.getElementById('stackedBarChart');
        new Chart(ctx, config);

    </script>
}